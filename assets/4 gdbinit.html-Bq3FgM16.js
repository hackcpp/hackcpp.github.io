import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,o as s,e}from"./app-BIwE0z1N.js";const a={},t=e(`<p><code>.gdbinit</code> 是 GNU 调试器（GDB）的初始化文件，用于在 GDB 启动时自动执行一系列命令或配置。通过 <code>.gdbinit</code> 文件，开发者可以自定义 GDB 的行为，预先设置断点、定义别名、配置调试环境等，从而提高调试效率。</p><h3 id="gdbinit-文件的作用" tabindex="-1"><a class="header-anchor" href="#gdbinit-文件的作用"><span><code>.gdbinit</code> 文件的作用</span></a></h3><p><code>.gdbinit</code> 文件的主要作用是自动执行一组 GDB 命令，避免在每次调试会话中手动输入相同的命令。它可以配置调试环境、定制调试工具和简化常用操作。常见的功能包括：</p><ol><li><strong>自动化设置</strong>：在调试会话开始时自动设置断点、初始化变量或加载调试符号。</li><li><strong>别名定义</strong>：通过定义命令别名，简化一些常用但复杂的 GDB 命令。</li><li><strong>定制化输出</strong>：通过设置 GDB 的显示风格，如开启或关闭不同的输出模式。</li><li><strong>自动加载调试插件</strong>：可以用来加载调试辅助工具或插件，比如 Pretty Printers（用于打印 C++ STL 容器等复杂数据结构的插件）。</li><li><strong>调试会话控制</strong>：可以在启动时自动运行脚本，控制调试的流程，如自动运行程序、自动进入特定函数等。</li></ol><h3 id="gdbinit-文件的常见位置" tabindex="-1"><a class="header-anchor" href="#gdbinit-文件的常见位置"><span><code>.gdbinit</code> 文件的常见位置</span></a></h3><ul><li><p><strong>用户主目录下的 <code>.gdbinit</code></strong>：位于用户主目录<code>/home/username/.gdbinit</code> 的文件是全局的 GDB 初始化文件，适用于所有 GDB 会话。它在每次启动 GDB 时都会被自动加载。</p></li><li><p><strong>当前目录下的 <code>.gdbinit</code></strong>：位于当前工作目录的 <code>.gdbinit</code> 文件仅在当前目录中启动 GDB 时生效。这个文件常用于为特定项目或代码库定制调试环境。</p></li></ul><div class="hint-container tip"><p class="hint-container-title">加载顺序</p><ol><li>系统全局的 GDB 初始化文件（通常位于 <code>/etc/gdb/gdbinit</code>）。</li><li>用户主目录中的 <code>.gdbinit</code> 文件。</li><li>当前目录中的 <code>.gdbinit</code> 文件。</li></ol></div><p>可以通过启动 GDB 时使用 <code>-nx</code> 或 <code>-n</code> 选项来禁止加载这些文件：</p><ul><li><code>gdb -n</code>：不加载系统全局的 <code>.gdbinit</code> 文件。</li><li><code>gdb -nx</code>：不加载任何 <code>.gdbinit</code> 文件。</li></ul><h3 id="gdbinit-文件的常用配置" tabindex="-1"><a class="header-anchor" href="#gdbinit-文件的常用配置"><span><code>.gdbinit</code> 文件的常用配置</span></a></h3><h4 id="设置断点" tabindex="-1"><a class="header-anchor" href="#设置断点"><span>设置断点</span></a></h4><p>可以在 <code>.gdbinit</code> 文件中预先定义好一些断点，GDB 启动时会自动在指定位置设置断点。</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>break main</span></span>
<span class="line"><span>break MyClass::myFunction</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="定义别名" tabindex="-1"><a class="header-anchor" href="#定义别名"><span>定义别名</span></a></h4><p>通过定义别名，可以简化常用命令的输入。</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>alias rbt = &quot;run break&quot;</span></span>
<span class="line"><span>alias bt = &quot;backtrace&quot;</span></span>
<span class="line"><span>alias ni = &quot;nexti&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自动加载符号和文件" tabindex="-1"><a class="header-anchor" href="#自动加载符号和文件"><span>自动加载符号和文件</span></a></h4><p>在调试大型项目时，可能需要自动加载符号文件或其他调试信息。</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>file /path/to/executable</span></span>
<span class="line"><span>symbol-file /path/to/symbols</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置调试环境" tabindex="-1"><a class="header-anchor" href="#配置调试环境"><span>配置调试环境</span></a></h4><p>可以通过 <code>.gdbinit</code> 配置调试环境的各类选项，例如设置断点、设置 GDB 输出风格等。</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>set pagination off</span></span>
<span class="line"><span>set print pretty on</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="定义自定义函数" tabindex="-1"><a class="header-anchor" href="#定义自定义函数"><span>定义自定义函数</span></a></h4><p>GDB 允许在 <code>.gdbinit</code> 中定义自定义函数，帮助简化调试流程。</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>define hook-stop</span></span>
<span class="line"><span>    printf &quot;Stopped at %s\\n&quot;, $pc</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个示例定义了一个名为 <code>hook-stop</code> 的函数，该函数会在每次程序停止时自动执行，打印当前的程序计数器（PC）的值。</p><h4 id="加载调试插件" tabindex="-1"><a class="header-anchor" href="#加载调试插件"><span>加载调试插件</span></a></h4><p>可以通过 <code>.gdbinit</code> 文件加载调试插件，如 Python 脚本、Pretty Printers 等。</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>python</span></span>
<span class="line"><span>import sys</span></span>
<span class="line"><span>sys.path.insert(0, &#39;/path/to/my/pretty_printers&#39;)</span></span>
<span class="line"><span>from my_pretty_printers import register_printers</span></span>
<span class="line"><span>register_printers (gdb.current_objfile ())</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 加载stdcxx pretty priters</span></span>
<span class="line"><span>python</span></span>
<span class="line"><span>import sys</span></span>
<span class="line"><span>sys.path.insert(0, &#39;/usr/share/gcc/python&#39;)</span></span>
<span class="line"><span>from libstdcxx.v6.printers import register_libstdcxx_printers</span></span>
<span class="line"><span>register_libstdcxx_printers(gdb.current_objfile())</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个例子展示了如何加载一个自定义的 Python 脚本，用于注册 GDB 的 Pretty Printer。</p><h3 id="典型的-gdbinit-示例" tabindex="-1"><a class="header-anchor" href="#典型的-gdbinit-示例"><span>典型的 <code>.gdbinit</code> 示例</span></a></h3><p>下面是一个典型的 <code>.gdbinit</code> 文件示例，它演示了如何设置断点、定义别名、配置调试选项和加载符号文件：</p><div class="language-gdb line-numbers-mode" data-highlighter="shiki" data-ext="gdb" data-title="gdb" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span># 设置常用断点</span></span>
<span class="line"><span>break main</span></span>
<span class="line"><span>break my_function</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 定义别名</span></span>
<span class="line"><span>alias rbt = &quot;run break&quot;</span></span>
<span class="line"><span>alias bt = &quot;backtrace&quot;</span></span>
<span class="line"><span>alias ni = &quot;nexti&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 加载调试符号文件</span></span>
<span class="line"><span>file /home/user/my_project/bin/my_executable</span></span>
<span class="line"><span>symbol-file /home/user/my_project/bin/my_executable.debug</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 配置调试环境</span></span>
<span class="line"><span>set pagination off</span></span>
<span class="line"><span>set print pretty on</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 加载自定义 Python Pretty Printers</span></span>
<span class="line"><span>python</span></span>
<span class="line"><span>import sys</span></span>
<span class="line"><span>sys.path.insert(0, &#39;/home/user/my_project/gdb_pretty_printers&#39;)</span></span>
<span class="line"><span>from my_pretty_printers import register_printers</span></span>
<span class="line"><span>register_printers(gdb.current_objfile())</span></span>
<span class="line"><span>end</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 自动化任务</span></span>
<span class="line"><span>define hook-stop</span></span>
<span class="line"><span>    printf &quot;Stopped at %s\\n&quot;, $pc</span></span>
<span class="line"><span>end</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个 <code>.gdbinit</code> 文件在 GDB 启动时会自动执行上述命令，从而快速设置好调试环境。</p><h3 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h3><ul><li><p><strong>安全性问题</strong>：GDB 加载 <code>.gdbinit</code> 文件时存在潜在的安全问题，因为它可能执行未经信任的命令。如果你不希望加载当前目录中的 <code>.gdbinit</code> 文件，可以使用 <code>gdb -nh</code> 或 <code>gdb -nx</code> 来禁用这些文件的加载。</p></li><li><p><strong>调试效率</strong>：通过 <code>.gdbinit</code> 文件自动化常见任务，能够显著提高调试效率，尤其是在处理大型项目或复杂调试环境时。</p></li></ul><div class="hint-container tip"><p class="hint-container-title">总结</p><p><code>.gdbinit</code> 文件是 GDB 的一个强大工具，用于自动配置调试环境和简化调试工作流。通过在 <code>.gdbinit</code> 文件中预定义命令、别名、自定义函数和调试插件，开发者可以大大提高调试效率，减少手动配置的重复性工作。在调试大型项目或频繁进行调试的场景下，合理使用 <code>.gdbinit</code> 可以极大地提升开发体验。</p></div><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h3><ul><li><a href="https://www.cse.unsw.edu.au/~learn/debugging/modules/gdb_init_file/" target="_blank" rel="noopener noreferrer">参考文档</a></li></ul>`,39),l=[t];function d(p,r){return s(),i("div",null,l)}const b=n(a,[["render",d],["__file","4 gdbinit.html.vue"]]),h=JSON.parse('{"path":"/tools/4%20gdbinit.html","title":"gdb 的配置文件","lang":"zh-CN","frontmatter":{"title":"gdb 的配置文件","order":2,"category":["工具"],"tag":["gdb","Linux","调试"],"editLink":false,"description":".gdbinit 是 GNU 调试器（GDB）的初始化文件，用于在 GDB 启动时自动执行一系列命令或配置。通过 .gdbinit 文件，开发者可以自定义 GDB 的行为，预先设置断点、定义别名、配置调试环境等，从而提高调试效率。 .gdbinit 文件的作用 .gdbinit 文件的主要作用是自动执行一组 GDB 命令，避免在每次调试会话中手动输入相...","head":[["meta",{"property":"og:url","content":"https://hackcpp.github.io/tools/4%20gdbinit.html"}],["meta",{"property":"og:site_name","content":"程序员的白粥馆"}],["meta",{"property":"og:title","content":"gdb 的配置文件"}],["meta",{"property":"og:description","content":".gdbinit 是 GNU 调试器（GDB）的初始化文件，用于在 GDB 启动时自动执行一系列命令或配置。通过 .gdbinit 文件，开发者可以自定义 GDB 的行为，预先设置断点、定义别名、配置调试环境等，从而提高调试效率。 .gdbinit 文件的作用 .gdbinit 文件的主要作用是自动执行一组 GDB 命令，避免在每次调试会话中手动输入相..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-23T08:21:11.000Z"}],["meta",{"property":"article:author","content":"Mr.Hackcpp"}],["meta",{"property":"article:tag","content":"gdb"}],["meta",{"property":"article:tag","content":"Linux"}],["meta",{"property":"article:tag","content":"调试"}],["meta",{"property":"article:modified_time","content":"2024-08-23T08:21:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"gdb 的配置文件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-23T08:21:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Hackcpp\\",\\"url\\":\\"/portfolio.html\\"}]}"]]},"headers":[{"level":3,"title":".gdbinit 文件的作用","slug":"gdbinit-文件的作用","link":"#gdbinit-文件的作用","children":[]},{"level":3,"title":".gdbinit 文件的常见位置","slug":"gdbinit-文件的常见位置","link":"#gdbinit-文件的常见位置","children":[]},{"level":3,"title":".gdbinit 文件的常用配置","slug":"gdbinit-文件的常用配置","link":"#gdbinit-文件的常用配置","children":[]},{"level":3,"title":"典型的 .gdbinit 示例","slug":"典型的-gdbinit-示例","link":"#典型的-gdbinit-示例","children":[]},{"level":3,"title":"注意事项","slug":"注意事项","link":"#注意事项","children":[]},{"level":3,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1724400120000,"updatedTime":1724401271000,"contributors":[{"name":"hackcpp","email":"liuheng2015@gmail.com","commits":2}]},"readingTime":{"minutes":4.3,"words":1289},"filePathRelative":"tools/4 gdbinit.md","localizedDate":"2024年8月23日","excerpt":"","autoDesc":true}');export{b as comp,h as data};
